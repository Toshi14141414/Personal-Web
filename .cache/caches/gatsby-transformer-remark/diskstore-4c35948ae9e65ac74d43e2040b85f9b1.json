{"expireTime":9007200817164562000,"key":"transformer-remark-markdown-ast-fd61d11bdb06de22b7996ddf21bc9a1c-gatsby-remark-prismjsgatsby-remark-images-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"A few days ago, I read a post about ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":37,"offset":37},"indent":[]}},{"type":"link","title":null,"url":"https://dev.to/gypsydave5/why-you-shouldnt-use-a-web-framework-3g24","children":[{"type":"text","value":"Why you shouldn't use a web framework","position":{"start":{"line":2,"column":38,"offset":38},"end":{"line":2,"column":75,"offset":75},"indent":[]}}],"position":{"start":{"line":2,"column":37,"offset":37},"end":{"line":2,"column":145,"offset":145},"indent":[]}},{"type":"text","value":" that gave me a bit of inspiration. Frameworks are great tools for full-fledged apps, but sometimes you don't need or want all the magic a framework provides.","position":{"start":{"line":2,"column":145,"offset":145},"end":{"line":2,"column":303,"offset":303},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":303,"offset":303},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Full disclosure though, a much better solution to what we're building is better done in Phoenix by passing ","position":{"start":{"line":4,"column":1,"offset":305},"end":{"line":4,"column":108,"offset":412},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">--no-ecto --no-webpack</code>","position":{"start":{"line":4,"column":108,"offset":412},"end":{"line":4,"column":132,"offset":436},"indent":[]}},{"type":"text","value":" which would get you a much better, more stable, more efficient base in which to build upon.","position":{"start":{"line":4,"column":132,"offset":436},"end":{"line":4,"column":224,"offset":528},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":305},"end":{"line":4,"column":224,"offset":528},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"But thats not the point of this tutorial. We're not fully replicating Phoenix, we're making this a super simple HTTP server. You can view the full implementation ","position":{"start":{"line":6,"column":1,"offset":530},"end":{"line":6,"column":163,"offset":692},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/matthewsecrist/TodoOTP-HTTP","children":[{"type":"text","value":"here","position":{"start":{"line":6,"column":164,"offset":693},"end":{"line":6,"column":168,"offset":697},"indent":[]}}],"position":{"start":{"line":6,"column":163,"offset":692},"end":{"line":6,"column":217,"offset":746},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":6,"column":217,"offset":746},"end":{"line":6,"column":218,"offset":747},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":530},"end":{"line":6,"column":218,"offset":747},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Go ahead and open up a terminal and do ","position":{"start":{"line":8,"column":1,"offset":749},"end":{"line":8,"column":40,"offset":788},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">mix new todo --sup</code>","position":{"start":{"line":8,"column":40,"offset":788},"end":{"line":8,"column":60,"offset":808},"indent":[]}},{"type":"text","value":" which will get us a nice little project started with a Supervision tree. That will allow us to start the GenServer automatically when the application is ran.","position":{"start":{"line":8,"column":60,"offset":808},"end":{"line":8,"column":218,"offset":966},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":749},"end":{"line":8,"column":218,"offset":966},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We'll start by building up the GenServer portion of it. We need to be able to do all CRUD functions in the app, so we'll make a file under ","position":{"start":{"line":10,"column":1,"offset":968},"end":{"line":10,"column":140,"offset":1107},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">todo/elixir/lib/todo/</code>","position":{"start":{"line":10,"column":140,"offset":1107},"end":{"line":10,"column":163,"offset":1130},"indent":[]}},{"type":"text","value":" called ","position":{"start":{"line":10,"column":163,"offset":1130},"end":{"line":10,"column":171,"offset":1138},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">server.ex</code>","position":{"start":{"line":10,"column":171,"offset":1138},"end":{"line":10,"column":182,"offset":1149},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":10,"column":182,"offset":1149},"end":{"line":10,"column":183,"offset":1150},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":968},"end":{"line":10,"column":183,"offset":1150},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"server.ex","position":{"start":{"line":12,"column":3,"offset":1154},"end":{"line":12,"column":12,"offset":1163},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":1154},"end":{"line":12,"column":12,"offset":1163},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":1152},"end":{"line":12,"column":12,"offset":1163},"indent":[]}},{"type":"html","lang":"elixir","value":"<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\"><span class=\"token keyword\">defmodule</span> Todo<span class=\"token punctuation\">.</span>Server <span class=\"token keyword\">do</span>\n\t<span class=\"token keyword\">use</span> GenServer\n\n\t<span class=\"token comment\"># Client</span>\n\t<span class=\"token keyword\">def</span> start_link<span class=\"token punctuation\">(</span>opts<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n\t<span class=\"token keyword\">end</span>\n\n\t<span class=\"token keyword\">def</span> list<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n\t<span class=\"token keyword\">end</span>\n\n\t<span class=\"token keyword\">def</span> add<span class=\"token punctuation\">(</span>todo<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n\t<span class=\"token keyword\">end</span>\n\n\t<span class=\"token keyword\">def</span> remove<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n\t<span class=\"token keyword\">end</span>\n\n\t<span class=\"token keyword\">def</span> toggle<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n\t<span class=\"token keyword\">end</span>\n\n\t<span class=\"token comment\"># Server</span>\n<span class=\"token keyword\">end</span></code></pre></div>","position":{"start":{"line":14,"column":1,"offset":1165},"end":{"line":36,"column":4,"offset":1369},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"That lays out the client interface for us so that we can begin implementation. To start a GenServer, we call ","position":{"start":{"line":38,"column":1,"offset":1371},"end":{"line":38,"column":110,"offset":1480},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">start</code>","position":{"start":{"line":38,"column":110,"offset":1480},"end":{"line":38,"column":117,"offset":1487},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":38,"column":117,"offset":1487},"end":{"line":38,"column":121,"offset":1491},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">start_link</code>","position":{"start":{"line":38,"column":121,"offset":1491},"end":{"line":38,"column":133,"offset":1503},"indent":[]}},{"type":"text","value":" which handles the call to ","position":{"start":{"line":38,"column":133,"offset":1503},"end":{"line":38,"column":160,"offset":1530},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">init</code>","position":{"start":{"line":38,"column":160,"offset":1530},"end":{"line":38,"column":166,"offset":1536},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":38,"column":166,"offset":1536},"end":{"line":38,"column":167,"offset":1537},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1371},"end":{"line":38,"column":167,"offset":1537},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"server.ex","position":{"start":{"line":40,"column":3,"offset":1541},"end":{"line":40,"column":12,"offset":1550},"indent":[]}}],"position":{"start":{"line":40,"column":3,"offset":1541},"end":{"line":40,"column":12,"offset":1550},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1539},"end":{"line":40,"column":12,"offset":1550},"indent":[]}},{"type":"html","lang":"elixir","value":"<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\"><span class=\"token operator\">...</span>\n<span class=\"token keyword\">def</span> start_link<span class=\"token punctuation\">(</span>opts<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n\tGenServer<span class=\"token punctuation\">.</span>start_link<span class=\"token punctuation\">(</span>__MODULE__<span class=\"token punctuation\">,</span> <span class=\"token atom symbol\">:ok</span><span class=\"token punctuation\">,</span> opts<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n<span class=\"token operator\">...</span>\n\n<span class=\"token comment\"># Server</span>\n\n<span class=\"token keyword\">def</span> init<span class=\"token punctuation\">(</span><span class=\"token atom symbol\">:ok</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n\t<span class=\"token punctuation\">{</span><span class=\"token atom symbol\">:ok</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">end</span></code></pre></div>","position":{"start":{"line":42,"column":1,"offset":1552},"end":{"line":54,"column":4,"offset":1689},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Going back to our Terminal, we can run our app by typing ","position":{"start":{"line":56,"column":1,"offset":1691},"end":{"line":56,"column":58,"offset":1748},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">iex -S mix</code>","position":{"start":{"line":56,"column":58,"offset":1748},"end":{"line":56,"column":70,"offset":1760},"indent":[]}},{"type":"text","value":" which will get a REPL. Inside, we can make sure our server starts by typing ","position":{"start":{"line":56,"column":70,"offset":1760},"end":{"line":56,"column":147,"offset":1837},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Todo.Server.start_link([])</code>","position":{"start":{"line":56,"column":147,"offset":1837},"end":{"line":56,"column":175,"offset":1865},"indent":[]}},{"type":"text","value":", and you should get the following","position":{"start":{"line":56,"column":175,"offset":1865},"end":{"line":56,"column":209,"offset":1899},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1691},"end":{"line":56,"column":209,"offset":1899},"indent":[]}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">iex(1)&gt; Todo.Server.start_link([])\n{:ok, #PID&lt;0.135.0&gt;}</code></pre></div>","position":{"start":{"line":58,"column":1,"offset":1901},"end":{"line":61,"column":4,"offset":1964},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The PID will likely be different for you, of course.","position":{"start":{"line":63,"column":1,"offset":1966},"end":{"line":63,"column":53,"offset":2018},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":1966},"end":{"line":63,"column":53,"offset":2018},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can go ahead and make sure that the Todo Server starts when we run ","position":{"start":{"line":65,"column":1,"offset":2020},"end":{"line":65,"column":71,"offset":2090},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">iex -S mix</code>","position":{"start":{"line":65,"column":71,"offset":2090},"end":{"line":65,"column":83,"offset":2102},"indent":[]}},{"type":"text","value":". Go into ","position":{"start":{"line":65,"column":83,"offset":2102},"end":{"line":65,"column":93,"offset":2112},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">lib/todo/application.ex</code>","position":{"start":{"line":65,"column":93,"offset":2112},"end":{"line":65,"column":118,"offset":2137},"indent":[]}},{"type":"text","value":" and to the ","position":{"start":{"line":65,"column":118,"offset":2137},"end":{"line":65,"column":130,"offset":2149},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">start(_type, _args)</code>","position":{"start":{"line":65,"column":130,"offset":2149},"end":{"line":65,"column":151,"offset":2170},"indent":[]}},{"type":"text","value":" function already there.","position":{"start":{"line":65,"column":151,"offset":2170},"end":{"line":65,"column":175,"offset":2194},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":2020},"end":{"line":65,"column":175,"offset":2194},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"application.ex","position":{"start":{"line":67,"column":3,"offset":2198},"end":{"line":67,"column":17,"offset":2212},"indent":[]}}],"position":{"start":{"line":67,"column":3,"offset":2198},"end":{"line":67,"column":17,"offset":2212},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":2196},"end":{"line":67,"column":17,"offset":2212},"indent":[]}},{"type":"html","lang":"elixir","value":"<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\"><span class=\"token operator\">...</span>\n<span class=\"token keyword\">def</span>  start<span class=\"token punctuation\">(</span>_type<span class=\"token punctuation\">,</span>  _args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n\tchildren <span class=\"token operator\">=</span>  <span class=\"token punctuation\">[</span>\n\t\t<span class=\"token punctuation\">{</span>Todo<span class=\"token punctuation\">.</span>Server<span class=\"token punctuation\">,</span>  <span class=\"token punctuation\">[</span><span class=\"token attr-name\">name:</span>  Todo<span class=\"token punctuation\">.</span>Server<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">]</span>\n<span class=\"token operator\">...</span></code></pre></div>","position":{"start":{"line":69,"column":1,"offset":2214},"end":{"line":76,"column":4,"offset":2321},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Next, we'll implement the Add and List functions.","position":{"start":{"line":78,"column":1,"offset":2323},"end":{"line":78,"column":50,"offset":2372},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":2323},"end":{"line":78,"column":50,"offset":2372},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"server.ex","position":{"start":{"line":80,"column":3,"offset":2376},"end":{"line":80,"column":12,"offset":2385},"indent":[]}}],"position":{"start":{"line":80,"column":3,"offset":2376},"end":{"line":80,"column":12,"offset":2385},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":2374},"end":{"line":80,"column":12,"offset":2385},"indent":[]}},{"type":"html","lang":"elixir","value":"<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\"><span class=\"token operator\">...</span>\n<span class=\"token keyword\">def</span> list<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n\tGenServer<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">(</span>__MODULE__<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token atom symbol\">:list</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token keyword\">def</span> add<span class=\"token punctuation\">(</span>todo<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n\tGenServer<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">(</span>__MODULE__<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token atom symbol\">:add</span><span class=\"token punctuation\">,</span> todo<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n<span class=\"token operator\">...</span>\n<span class=\"token comment\"># Server</span>\n<span class=\"token operator\">...</span>\n<span class=\"token keyword\">def</span>  handle_call<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token atom symbol\">:list</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>  _from<span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n\t<span class=\"token punctuation\">{</span><span class=\"token atom symbol\">:reply</span><span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token keyword\">def</span> handle_call<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token atom symbol\">:add</span><span class=\"token punctuation\">,</span> todo<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> _from<span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n\tnew_todo <span class=\"token operator\">=</span> <span class=\"token punctuation\">%</span><span class=\"token punctuation\">{</span><span class=\"token attr-name\">name:</span> todo<span class=\"token punctuation\">,</span> <span class=\"token attr-name\">done:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">id:</span> generate_id<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\tnew_state <span class=\"token operator\">=</span> state <span class=\"token operator\">++</span> <span class=\"token punctuation\">[</span>new_todo<span class=\"token punctuation\">]</span>\n\t<span class=\"token punctuation\">{</span><span class=\"token atom symbol\">:reply</span><span class=\"token punctuation\">,</span> new_state<span class=\"token punctuation\">,</span> new_state<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">end</span>\n<span class=\"token operator\">...</span>\n<span class=\"token comment\"># Private</span>\n<span class=\"token keyword\">defp</span> generate_id<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n<span class=\"token comment\"># This generates a basic ID for us, ends up being something</span>\n<span class=\"token comment\"># like \"CeiGYfspjHJAld42hI3OY1lbulxGkyR8W-zqXpkSMwpilPFtv0uE5jCW229-k47J\"</span>\n<span class=\"token comment\"># which will not completely prevent collisions, but will reduce</span>\n<span class=\"token comment\"># their chances.</span>\n\t<span class=\"token atom symbol\">:crypto</span><span class=\"token punctuation\">.</span>strong_rand_bytes<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token operator\">|></span>  Base<span class=\"token punctuation\">.</span>url_encode64<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token operator\">|></span> binary_part<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">64</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span></code></pre></div>","position":{"start":{"line":82,"column":1,"offset":2387},"end":{"line":114,"column":4,"offset":3122},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Notice that I'm using ","position":{"start":{"line":116,"column":1,"offset":3124},"end":{"line":116,"column":23,"offset":3146},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">call</code>","position":{"start":{"line":116,"column":23,"offset":3146},"end":{"line":116,"column":29,"offset":3152},"indent":[]}},{"type":"text","value":" here instead of ","position":{"start":{"line":116,"column":29,"offset":3152},"end":{"line":116,"column":46,"offset":3169},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">cast</code>","position":{"start":{"line":116,"column":46,"offset":3169},"end":{"line":116,"column":52,"offset":3175},"indent":[]}},{"type":"text","value":". This is because when we make our HTTP server, it will reply with the list of Todos with every response. We're not going to be dealing with holding any state on the front end, so we can't just reply with an ","position":{"start":{"line":116,"column":52,"offset":3175},"end":{"line":116,"column":260,"offset":3383},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">:ok</code>","position":{"start":{"line":116,"column":260,"offset":3383},"end":{"line":116,"column":265,"offset":3388},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":116,"column":265,"offset":3388},"end":{"line":116,"column":266,"offset":3389},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":3124},"end":{"line":116,"column":266,"offset":3389},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can then go back to our terminal again and ","position":{"start":{"line":118,"column":1,"offset":3391},"end":{"line":118,"column":47,"offset":3437},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">iex -S mix</code>","position":{"start":{"line":118,"column":47,"offset":3437},"end":{"line":118,"column":59,"offset":3449},"indent":[]}},{"type":"text","value":". Our GenServer should boot up with the application, so no need to call ","position":{"start":{"line":118,"column":59,"offset":3449},"end":{"line":118,"column":131,"offset":3521},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">start_link</code>","position":{"start":{"line":118,"column":131,"offset":3521},"end":{"line":118,"column":143,"offset":3533},"indent":[]}},{"type":"text","value":" this time. Lets try it out!","position":{"start":{"line":118,"column":143,"offset":3533},"end":{"line":118,"column":171,"offset":3561},"indent":[]}}],"position":{"start":{"line":118,"column":1,"offset":3391},"end":{"line":118,"column":171,"offset":3561},"indent":[]}},{"type":"html","lang":"elixir","value":"<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\">iex<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span> Todo<span class=\"token punctuation\">.</span>Server<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span>\n\t<span class=\"token punctuation\">%</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token attr-name\">done:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token attr-name\">id:</span> <span class=\"token string\">\"B9aMiHTT5CAqDWY8JyxV6QbmlRdiPyLopThv_EHARk4EwRFCyRG_Ip4q5NJv7NSh\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token attr-name\">name:</span> <span class=\"token string\">\"Hello\"</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\niex<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span> Todo<span class=\"token punctuation\">.</span>Server<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span>\n\t<span class=\"token punctuation\">%</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token attr-name\">done:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token attr-name\">id:</span> <span class=\"token string\">\"B9aMiHTT5CAqDWY8JyxV6QbmlRdiPyLopThv_EHARk4EwRFCyRG_Ip4q5NJv7NSh\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token attr-name\">name:</span> <span class=\"token string\">\"Hello\"</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":120,"column":1,"offset":3563},"end":{"line":137,"column":4,"offset":3868},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Your response should look something like that. If it does, great! Lets move on to our ","position":{"start":{"line":139,"column":1,"offset":3870},"end":{"line":139,"column":87,"offset":3956},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">toggle(id)</code>","position":{"start":{"line":139,"column":87,"offset":3956},"end":{"line":139,"column":99,"offset":3968},"indent":[]}},{"type":"text","value":" function.","position":{"start":{"line":139,"column":99,"offset":3968},"end":{"line":139,"column":109,"offset":3978},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":3870},"end":{"line":139,"column":109,"offset":3978},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"server.ex","position":{"start":{"line":141,"column":3,"offset":3982},"end":{"line":141,"column":12,"offset":3991},"indent":[]}}],"position":{"start":{"line":141,"column":3,"offset":3982},"end":{"line":141,"column":12,"offset":3991},"indent":[]}}],"position":{"start":{"line":141,"column":1,"offset":3980},"end":{"line":141,"column":12,"offset":3991},"indent":[]}},{"type":"html","lang":"elixir","value":"<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\"><span class=\"token operator\">...</span>\n<span class=\"token keyword\">def</span>  toggle<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n\tGenServer<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">(</span>__MODULE__<span class=\"token punctuation\">,</span>  <span class=\"token punctuation\">{</span><span class=\"token atom symbol\">:toggle</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n<span class=\"token operator\">...</span>\n<span class=\"token keyword\">def</span>  handle_call<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token atom symbol\">:toggle</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>  _from<span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n\t<span class=\"token punctuation\">[</span>todo<span class=\"token punctuation\">]</span>  <span class=\"token operator\">=</span>  Enum<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span>  <span class=\"token keyword\">fn</span> x <span class=\"token operator\">-></span> x<span class=\"token punctuation\">.</span>id <span class=\"token operator\">==</span> id <span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span>\n\ttoggled_todo <span class=\"token operator\">=</span> <span class=\"token punctuation\">%</span><span class=\"token punctuation\">{</span>todo <span class=\"token operator\">|</span>  <span class=\"token attr-name\">done:</span>  <span class=\"token operator\">!</span>todo<span class=\"token punctuation\">.</span>done<span class=\"token punctuation\">}</span>\n\tnew_state <span class=\"token operator\">=</span>\n\t\tstate\n\t\t<span class=\"token operator\">|></span>  Enum<span class=\"token punctuation\">.</span>map<span class=\"token punctuation\">(</span><span class=\"token keyword\">fn</span> x <span class=\"token operator\">-></span>\n\t\t\t\t<span class=\"token keyword\">if</span> is_id?<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n\t\t\t\t\ttoggled_todo\n\t\t\t\t<span class=\"token keyword\">else</span>\n\t\t\t\t\tx\n\t\t\t\t<span class=\"token keyword\">end</span>\n\t\t\t<span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span><span class=\"token atom symbol\">:reply</span><span class=\"token punctuation\">,</span> new_state<span class=\"token punctuation\">,</span> new_state<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">end</span>\n<span class=\"token operator\">...</span>\n<span class=\"token comment\"># Private</span>\n<span class=\"token keyword\">defp</span> is_id?<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">do:</span> x<span class=\"token punctuation\">.</span>id <span class=\"token operator\">==</span> id</code></pre></div>","position":{"start":{"line":143,"column":1,"offset":3993},"end":{"line":166,"column":4,"offset":4435},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"And again, we'll test it out.","position":{"start":{"line":168,"column":1,"offset":4437},"end":{"line":168,"column":30,"offset":4466},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":4437},"end":{"line":168,"column":30,"offset":4466},"indent":[]}},{"type":"html","lang":"elixir","value":"<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\">iex<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>todo<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Todo<span class=\"token punctuation\">.</span>Server<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span>\n\t<span class=\"token punctuation\">%</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token attr-name\">done:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token attr-name\">id:</span> <span class=\"token string\">\"KTH7L3yoHNS_-ciwdLpMbmCtW62VY8xS_VPT62yVxdXv_ZQDb1GROVmjBV6oEage\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token attr-name\">name:</span> <span class=\"token string\">\"test\"</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\niex<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span> Todo<span class=\"token punctuation\">.</span>Server<span class=\"token punctuation\">.</span>toggle<span class=\"token punctuation\">(</span>todo<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span>\n\t<span class=\"token punctuation\">%</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token attr-name\">done:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token attr-name\">id:</span> <span class=\"token string\">\"KTH7L3yoHNS_-ciwdLpMbmCtW62VY8xS_VPT62yVxdXv_ZQDb1GROVmjBV6oEage\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token attr-name\">name:</span> <span class=\"token string\">\"test\"</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":170,"column":1,"offset":4468},"end":{"line":187,"column":4,"offset":4787},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Wonderful! Next up, ","position":{"start":{"line":189,"column":1,"offset":4789},"end":{"line":189,"column":21,"offset":4809},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">remove(id)</code>","position":{"start":{"line":189,"column":21,"offset":4809},"end":{"line":189,"column":33,"offset":4821},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":189,"column":33,"offset":4821},"end":{"line":189,"column":34,"offset":4822},"indent":[]}}],"position":{"start":{"line":189,"column":1,"offset":4789},"end":{"line":189,"column":34,"offset":4822},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"server.ex","position":{"start":{"line":191,"column":3,"offset":4826},"end":{"line":191,"column":12,"offset":4835},"indent":[]}}],"position":{"start":{"line":191,"column":3,"offset":4826},"end":{"line":191,"column":12,"offset":4835},"indent":[]}}],"position":{"start":{"line":191,"column":1,"offset":4824},"end":{"line":191,"column":12,"offset":4835},"indent":[]}},{"type":"html","lang":"elixir","value":"<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\"><span class=\"token operator\">...</span>\n<span class=\"token keyword\">def</span>  remove<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n\tGenServer<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">(</span>__MODULE__<span class=\"token punctuation\">,</span>  <span class=\"token punctuation\">{</span><span class=\"token atom symbol\">:delete</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n<span class=\"token operator\">...</span>\n<span class=\"token keyword\">def</span>  handle_call<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token atom symbol\">:delete</span><span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>  _from<span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n\tnew_state <span class=\"token operator\">=</span>\n\tstate\n\t<span class=\"token operator\">|></span>  Enum<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">(</span><span class=\"token keyword\">fn</span> x <span class=\"token operator\">-></span>\n\t\t\t<span class=\"token operator\">!</span>is_id?<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span><span class=\"token atom symbol\">:reply</span><span class=\"token punctuation\">,</span> new_state<span class=\"token punctuation\">,</span> new_state<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">end</span></code></pre></div>","position":{"start":{"line":193,"column":1,"offset":4837},"end":{"line":207,"column":4,"offset":5081},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"And we test..","position":{"start":{"line":209,"column":1,"offset":5083},"end":{"line":209,"column":14,"offset":5096},"indent":[]}}],"position":{"start":{"line":209,"column":1,"offset":5083},"end":{"line":209,"column":14,"offset":5096},"indent":[]}},{"type":"html","lang":"elixir","value":"<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\">iex<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>todo<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Todo<span class=\"token punctuation\">.</span>Server<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span>\n\t<span class=\"token punctuation\">%</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token attr-name\">done:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token attr-name\">id:</span> <span class=\"token string\">\"RpfnxF-YJE_A4FgsQFtg1ODhRcY90lxkSG0U0DHlVDvAfN_zDOJOVXPEkjuBAPsz\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token attr-name\">name:</span> <span class=\"token string\">\"test\"</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\niex<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span> Todo<span class=\"token punctuation\">.</span>Server<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>todo<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\niex<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span> Todo<span class=\"token punctuation\">.</span>Server<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></code></pre></div>","position":{"start":{"line":211,"column":1,"offset":5098},"end":{"line":224,"column":4,"offset":5336},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Great, that makes up our abilities to add, toggle, remove and list Todos in a GenServer app. Next, we'll make our HTTP server.","position":{"start":{"line":226,"column":1,"offset":5338},"end":{"line":226,"column":127,"offset":5464},"indent":[]}}],"position":{"start":{"line":226,"column":1,"offset":5338},"end":{"line":226,"column":127,"offset":5464},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"http://www.matthewsecrist.net//building-a-basic-http-server-with-elixir-p2/","children":[{"type":"text","value":"Check out part 2 here","position":{"start":{"line":228,"column":2,"offset":5467},"end":{"line":228,"column":23,"offset":5488},"indent":[]}}],"position":{"start":{"line":228,"column":1,"offset":5466},"end":{"line":228,"column":101,"offset":5566},"indent":[]}}],"position":{"start":{"line":228,"column":1,"offset":5466},"end":{"line":228,"column":101,"offset":5566},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Have any questions or comments? Feel free to send me a ","position":{"start":{"line":230,"column":1,"offset":5568},"end":{"line":230,"column":56,"offset":5623},"indent":[]}},{"type":"link","title":null,"url":"https://twitter.com/_mattsecrist","children":[{"type":"text","value":"tweet","position":{"start":{"line":230,"column":57,"offset":5624},"end":{"line":230,"column":62,"offset":5629},"indent":[]}}],"position":{"start":{"line":230,"column":56,"offset":5623},"end":{"line":230,"column":97,"offset":5664},"indent":[]}},{"type":"text","value":"!","position":{"start":{"line":230,"column":97,"offset":5664},"end":{"line":230,"column":98,"offset":5665},"indent":[]}}],"position":{"start":{"line":230,"column":1,"offset":5568},"end":{"line":230,"column":98,"offset":5665},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":231,"column":1,"offset":5666}}}}