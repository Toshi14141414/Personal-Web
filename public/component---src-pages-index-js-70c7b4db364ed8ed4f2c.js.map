{"version":3,"sources":["webpack:///./src/layout/Container.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SEO.js","webpack:///./src/theme/GlobalStyle.js","webpack:///./src/layout/Navigation.js","webpack:///./src/components/socialMediaLinks.js","webpack:///./src/layout/layout.js","webpack:///./src/components/SuperText.js"],"names":["Container","styled","div","withConfig","displayName","componentId","__webpack_require__","d","__webpack_exports__","pageQuery","RecentPostsContainer","IndexPage","_ref","data","allMarkdownRemark","edges","react_default","a","createElement","layout","layout_Container","SEO","title","SuperText","id","href","className","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","query","render","finalData","Fragment","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","description","article","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","_ref2","_ref2$site$siteMetada","site","siteMetadata","defaultTitle","titleTemplate","defaultDescription","siteUrl","twitterUsername","seo","url","react_helmet__WEBPACK_IMPORTED_MODULE_2__","name","content","propery","property","_public_static_d_2790152435_json__WEBPACK_IMPORTED_MODULE_0__","bool","defaultProps","white","GlobalStyle","createGlobalStyle","_templateObject","MobileNavMenu","MenuAltRight","toggled","md","NavMenu","visible","NavLinksContainer","nav","Navigation","_useState","useState","navExpanded","toggleNavExpand","size","onClick","gatsby_browser_entry","to","activeClassName","Link","SocialMediaContainer","SocialMediaLinks","_ref$site$siteMetadat","instagram","github","linkedin","weibo","email","alt","aria-label","Instagram","color","Github","Linkedin","Weibo","Mail","_1647048299","ContentContainer","ThemeToggle","span","Foot","Layout","theme_GlobalStyle","layout_Navigation","socialMediaLinks","h1"],"mappings":"uIAMeA,EAJGC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,YAAAC,YAAA,gBAAGJ,CAAH,wCCFfK,EAAAC,EAAAC,EAAA,8BAAAC,IAUA,IAAMC,EAAuBT,IAAOC,IAAVC,WAAA,CAAAC,YAAA,8BAAAC,YAAA,gBAAGJ,CAAH,+EA6CbQ,GAFEE,UAjCG,SAAAC,KAChBC,KACEC,kBAAqBC,MAFP,OAKhBC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAD,KACEJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKC,MAAM,aACXN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAWC,GAAG,iBAAd,oBACAR,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wBAAeF,EAAAC,EAAAC,cAAA,QAAMM,GAAG,WAAT,YAAf,KACAR,EAAAC,EAAAC,cAAA,gCAAwB,IACtBF,EAAAC,EAAAC,cAAA,KAAGO,KAAK,uBAAuBD,GAAG,cAAlC,yBAEFR,EAAAC,EAAAC,cAAA,4OAMAF,EAAAC,EAAAC,cAAA,KAAGM,GAAG,OAAN,yDAEAR,EAAAC,EAAAC,cAACR,EAAD,KACEM,EAAAC,EAAAC,cAAA,MAAIQ,UAAU,SAAd,oCACAV,EAAAC,EAAAC,cAAA,OAAKM,GAAG,sBAWI,+CCvDtBlB,EAAAC,EAAAC,EAAA,sBAAAmB,IAAA,IAAAC,EAAAtB,EAAA,GAAAuB,EAAAvB,EAAAwB,EAAAF,GAAAG,EAAAzB,EAAA,GAAA0B,EAAA1B,EAAAwB,EAAAC,GAAAE,EAAA3B,EAAA,IAAA4B,EAAA5B,EAAAwB,EAAAG,GAAA3B,EAAAC,EAAAC,EAAA,sBAAA0B,EAAAjB,IAAAX,EAAA,SAaM6B,EAAqBC,IAAMC,cAAc,IAE/C,SAASC,EAAT1B,GAA2E,IAAxC2B,EAAwC3B,EAAxC2B,gBAAiB1B,EAAuBD,EAAvBC,KAAM2B,EAAiB5B,EAAjB4B,MAAOC,EAAU7B,EAAV6B,OACzDC,EAAY7B,EACdA,EAAKA,KACL0B,EAAgBC,IAAUD,EAAgBC,GAAO3B,KAErD,OACEgB,EAAAZ,EAAAC,cAACW,EAAAZ,EAAM0B,SAAP,KACGD,GAAaD,EAAOC,IACnBA,GAAab,EAAAZ,EAAAC,cAAA,qCAKrB,IAAMS,EAAc,SAAAiB,GAAS,IACnB/B,EAAkC+B,EAAlC/B,KAAM2B,EAA4BI,EAA5BJ,MAAOC,EAAqBG,EAArBH,OAAQI,EAAaD,EAAbC,SAE7B,OACEhB,EAAAZ,EAAAC,cAACiB,EAAmBW,SAApB,KACG,SAAAP,GAAe,OACdV,EAAAZ,EAAAC,cAACoB,EAAD,CACEzB,KAAMA,EACN2B,MAAOA,EACPC,OAAQA,GAAUI,EAClBN,gBAAiBA,OA6B3BZ,EAAYoB,UAAY,CACtBlC,KAAMmC,IAAUC,OAChBT,MAAOQ,IAAUE,OAAOC,WACxBV,OAAQO,IAAUI,KAClBP,SAAUG,IAAUI,2BCvEtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,6FCKzCK,EAAmB,SAAA9C,GAAiC,IAA9B+C,EAA8B/C,EAA9B+C,SAAUC,EAAoBhD,EAApBgD,cACpC,OAAKA,EAGExB,IAAMlB,cAAc2C,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,MASXN,EAAiBX,UAAY,CAC3BY,SAAUX,IAAUiB,MAAM,CACxBC,SAAUlB,IAAUE,OAAOC,aAC1BA,YAGUO,mXCjBTrC,EAAM,SAAAT,GAAA,IAAGU,EAAHV,EAAGU,MAAO6C,EAAVvD,EAAUuD,YAAaD,EAAvBtD,EAAuBsD,SAAUE,EAAjCxD,EAAiCwD,QAAjC,OACVC,EAAApD,EAAAC,cAACoD,EAAA,EAAD,CACE9B,MAAOA,EACPC,OAAQ,SAAA8B,GAUF,IAAAC,EAAAD,EATJE,KACEC,aACEC,EAOAH,EAPAG,aACAC,EAMAJ,EANAI,cACAC,EAKAL,EALAK,mBACAC,EAIAN,EAJAM,QACAC,EAGAP,EAHAO,gBAIEC,EAAM,CACV1D,MAAOA,GAASqD,EAChBR,YAAaA,GAAeU,EAC5BI,IAAG,GAAKH,GAAUZ,GAAY,MAGhC,OACEG,EAAApD,EAAAC,cAACmD,EAAApD,EAAM0B,SAAP,KACE0B,EAAApD,EAAAC,cAACgE,EAAA,OAAD,CAAQ5D,MAAO0D,EAAI1D,MAAOsD,cAAeA,GACvCP,EAAApD,EAAAC,cAAA,QAAMiE,KAAK,cAAcC,QAASJ,EAAIb,cACtCE,EAAApD,EAAAC,cAAA,QAAMmE,QAAQ,YAAYD,QAAQ,OACjCJ,EAAIC,KAAOZ,EAAApD,EAAAC,cAAA,QAAMoE,SAAS,SAASF,QAASJ,EAAIC,MAChDb,GAAWC,EAAApD,EAAAC,cAAA,QAAMoE,SAAS,UAAUF,QAAQ,YAC5CJ,EAAI1D,OAAS+C,EAAApD,EAAAC,cAAA,QAAMoE,SAAS,WAAWF,QAASJ,EAAI1D,QAEpD0D,EAAIb,aACHE,EAAApD,EAAAC,cAAA,QAAMoE,SAAS,iBAAiBF,QAASJ,EAAIb,cAG9CY,GACCV,EAAApD,EAAAC,cAAA,QAAMiE,KAAK,kBAAkBC,QAASL,IAEvCC,EAAI1D,OAAS+C,EAAApD,EAAAC,cAAA,QAAMiE,KAAK,gBAAgBC,QAASJ,EAAI1D,QACrD0D,EAAIb,aACHE,EAAApD,EAAAC,cAAA,QAAMiE,KAAK,sBAAsBC,QAASJ,EAAIb,cAEhDE,EAAApD,EAAAC,cAAA,QACEiE,KAAK,WACLC,QAAO,mIAzCnBvE,KAAA0E,KAkDalE,MAEfA,EAAI0B,UAAY,CACdzB,MAAO0B,IAAUE,OACjBiB,YAAanB,IAAUE,OACvBgB,SAAUlB,IAAUE,OACpBkB,QAASpB,IAAUwC,MAGrBnE,EAAIoE,aAAe,CACjBnE,MAAO,KACP6C,YAAa,KACbD,SAAU,KACVE,SAAS,GAGX,IAAM5B,EAAK,syDCtEX,IAGMkD,EAAQ,UA+GCC,EApGKC,YAAHC,IAdG,UAyBNH,EACGA,EAzBK,UA2BLA,EACCA,EAlBJ,UACK,UAZC,UAoCJA,EACGA,EApCG,UAQP,UADF,UADC,UAFD,UAGA,UADC,UADC,UADF,UADE,sCCATI,EAAgB7F,YAAO8F,KAAV5F,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAGJ,CAAH,+GAIR,SAAA2C,GAAK,OAAKA,EAAMoD,QAAU,cAAgB,kBAEnBC,MAK5BC,EAAUjG,IAAOC,IAAVC,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAGJ,CAAH,0VAYqBgG,KAON,SAAArD,GAAK,OAAKA,EAAMuD,QAAU,KAAO,SAIvDC,EAAoBnG,IAAOoG,IAAVlG,WAAA,CAAAC,YAAA,gCAAAC,YAAA,gBAAGJ,CAAH,kNA6ERqG,EArDI,WAAM,IAAAC,EACgBC,oBAAS,GAAzCC,EADgBF,EAAA,GACHG,EADGH,EAAA,GAsCvB,OACEvF,EAAAC,EAAAC,cAACF,EAAAC,EAAM0B,SAAP,KACE3B,EAAAC,EAAAC,cAAC4E,EAAD,CACEtE,GAAG,kBACHmF,KAAM,GACNX,SAAUS,EACVG,QAAS,kBAAMF,GAAiBD,MAElCzF,EAAAC,EAAAC,cAACgF,EAAD,CAAS1E,GAAG,MAAM2E,QAASM,GA1C7BzF,EAAAC,EAAAC,cAACkF,EAAD,KACEpF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAMC,GAAG,IAAIC,gBAAgB,SAASvF,GAAK,WAA3C,YAKFR,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAMC,GAAG,YAAYC,gBAAgB,SAASvF,GAAK,YAAnD,aAKFR,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAMC,GAAG,cAAcC,gBAAgB,SAASvF,GAAK,cAArD,eAKFR,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAMC,GAAG,UAAUC,gBAAgB,SAASvF,GAAK,UAAjD,WAKFR,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAMC,GAAG,UAAUC,gBAAgB,SAASvF,GAAK,UAAjD,qEClFFwF,EAAO/G,IAAOgB,EAAVd,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAGJ,CAAH,kBAGJgH,EAAuBhH,IAAOC,IAAVC,WAAA,CAAAC,YAAA,yCAAAC,YAAA,gBAAGJ,CAAH,qJAgEXiH,EA/CU,kBACvBlG,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CACErE,MAAK,aAaLC,OAAQ,SAAA7B,GAIF,IAAAuG,EAAAvG,EAHJ6D,KACEC,aAAgB0C,EAEdD,EAFcC,UAAWC,EAEzBF,EAFyBE,OAAQC,EAEjCH,EAFiCG,SAAUC,EAE3CJ,EAF2CI,MAAOC,EAElDL,EAFkDK,MAGtD,OACExG,EAAAC,EAAAC,cAAC+F,EAAD,KACEjG,EAAAC,EAAAC,cAAC8F,EAAD,CAAMvF,KAAM2F,EAAWK,IAAI,YAAYC,aAAW,qBAChD1G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWC,MAAQ,UAAUjB,KA7CvB,QA+CR3F,EAAAC,EAAAC,cAAC8F,EAAD,CAAMvF,KAAM4F,EAAQI,IAAI,SAASC,aAAW,kBAC1C1G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAQD,MAAQ,UAAUjB,KAhDpB,QAkDR3F,EAAAC,EAAAC,cAAC8F,EAAD,CAAMvF,KAAM6F,EAAUG,IAAI,WAAWC,aAAW,qBAC9C1G,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAUF,MAAQ,UAAUjB,KAnDtB,QAqDR3F,EAAAC,EAAAC,cAAC8F,EAAD,CAAMvF,KAAM8F,EAAOE,IAAI,QAAQC,aAAW,iBACxC1G,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAOH,MAAQ,UAAUjB,KAtDnB,QAwDR3F,EAAAC,EAAAC,cAAC8F,EAAD,CACEvF,KAAI,UAAY+F,EAChBC,IAAI,SACJC,aAAW,sBAEX1G,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAMJ,MAAQ,UAAUjB,KA7DlB,UAuBhB9F,KAAAoH,KCxBIC,EAAmBjI,IAAOC,IAAVC,WAAA,CAAAC,YAAA,2BAAAC,YAAA,gBAAGJ,CAAH,wFAIYgG,MAK5BkC,EAAclI,IAAOmI,KAAVjI,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAGJ,CAAH,iEAOXoI,EAAOpI,IAAOC,IAAVC,WAAA,CAAAC,YAAA,eAAAC,YAAA,gBAAGJ,CAAH,0DAwBKqI,IAlBA,SAAA1H,GAAkB,IAAfiC,EAAejC,EAAfiC,SAEhB,OACE7B,EAAAC,EAAAC,cAACF,EAAAC,EAAM0B,SAAP,KACE3B,EAAAC,EAAAC,cAACqH,EAAD,MACAvH,EAAAC,EAAAC,cAACiH,EAAD,MACAnH,EAAAC,EAAAC,cAACsH,EAAD,MACAxH,EAAAC,EAAAC,cAACgH,EAAD,KACGrF,EACD7B,EAAAC,EAAAC,cAACmH,EAAD,KACErH,EAAAC,EAAAC,cAACuH,EAAD,MACAzH,EAAAC,EAAAC,cAAA,6EC1CV,IAEMK,EAFNjB,EAAA,KAEkBL,EAAOyI,GAAVvI,WAAA,CAAAC,YAAA,YAAAC,YAAA,eAAGJ,CAAH,uRAyBAsB","file":"component---src-pages-index-js-70c7b4db364ed8ed4f2c.js","sourcesContent":["import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-top: 10vh;\n`\n\nexport default Container\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport styled from 'styled-components'\nimport Layout from '../layout/layout'\n\nimport Container from '../layout/Container'\nimport SuperText from '../components/SuperText'\nimport SEO from '../components/SEO'\n// import PostListing from '../components/PostListing'\n\nconst RecentPostsContainer = styled.div`\n  padding-top: 20vh;\n  text-align: left;\n\n  .title {\n    font-size: 2em;\n    color: var(--text);\n  }\n`\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges }\n  }\n}) => (\n  <Layout>\n    <Container>\n      <SEO title=\"Hanyu Xu\" />\n      <SuperText id=\"niceToMeetYou\">Nice to meet you</SuperText>\n      <div>\n        <h1>My name is <span id=\"hanyuXu\">Hanyu Xu</span>.</h1>\n        <p>A Master Student At {' '}\n          <a href=\"https://www.nyu.edu/\" id=\"university\">New York University.</a>\n        </p>\n        <p>\n          I'm a creative, ambitious and enterprising software engineer primarily focusing on web development.\n          I love work with React, Node, Java and Python. \n          Also, I like Video Games, Animate, TV serious - Friends and The Cranberries. \n        </p>\n\n        <p id=\"job\">Actively looking for Software Engineer Full-Time job.</p>\n\n        <RecentPostsContainer>\n          <h1 className=\"title\">Don't know what to put right now</h1>\n          <div id=\"recent-posts\">\n            \n          </div>\n        </RecentPostsContainer>\n      </div>\n    </Container>\n  </Layout>\n)\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(\n      limit: 3\n      filter:{fileAbsolutePath: {regex: \"\"}}, \n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            slug\n            title\n            description\n            date\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nconst SEO = ({ title, description, pathname, article }) => (\n  <StaticQuery\n    query={query}\n    render={({\n      site: {\n        siteMetadata: {\n          defaultTitle,\n          titleTemplate,\n          defaultDescription,\n          siteUrl,\n          twitterUsername\n        }\n      }\n    }) => {\n      const seo = {\n        title: title || defaultTitle,\n        description: description || defaultDescription,\n        url: `${siteUrl}${pathname || '/'}`\n      }\n\n      return (\n        <React.Fragment>\n          <Helmet title={seo.title} titleTemplate={titleTemplate}>\n            <meta name='description' content={seo.description} />\n            <meta propery='og:locale' content='en' />\n            {seo.url && <meta property='og:url' content={seo.url} />}\n            {article && <meta property='og:type' content='article' />}\n            {seo.title && <meta property='og:title' content={seo.title} />}\n\n            {seo.description && (\n              <meta property='og:description' content={seo.description} />\n            )}\n\n            {twitterUsername && (\n              <meta name='twitter:creator' content={twitterUsername} />\n            )}\n            {seo.title && <meta name='twitter:title' content={seo.title} />}\n            {seo.description && (\n              <meta name='twitter:description' content={seo.description} />\n            )}\n            <meta\n              name='keywords'\n              content={`web developer, web developer in boone iowa, front end developer, elixir, react, javascript, matthew secrist, matthewsecrist`}\n            />\n          </Helmet>\n        </React.Fragment>\n      )\n    }}\n  />\n)\n\nexport default SEO\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  pathname: PropTypes.string,\n  article: PropTypes.bool\n}\n\nSEO.defaultProps = {\n  title: null,\n  description: null,\n  pathname: null,\n  article: false\n}\n\nconst query = graphql`\n  query SEO {\n    site {\n      siteMetadata {\n        defaultTitle: title\n        defaultDescription: description\n        siteUrl: siteUrl\n        twitterUsername\n        titleTemplate\n      }\n    }\n  }\n`\n","import { createGlobalStyle } from 'styled-components'\n\nconst primaryDark = '#1a1d27'\nconst secondaryDark = '#2d303d'\n\nconst white = '#eae9e1'\nconst purple = '#af98e6'\nconst blue = '#51c7da'\nconst yellow = '#fada5d'\nconst green = '#83c192'\nconst pink = '#f29c9f'\nconst orange = '#ffbd50'\n\nconst black = '#1a1d27'\nconst lightWhite = '#FFFFFF'\n\nconst GlobalStyle = createGlobalStyle`\n  *,\n  *:before,\n  *:after {\n    box-sizing: border-box;\n  }\n\n  @import url('https://fonts.googleapis.com/css?family=Ubuntu&display=swap');\n  \n  body {\n    --bg: ${primaryDark};\n    --text: ${white};   \n    --primary: ${white};  \n    --navBg: ${secondaryDark};\n    --navText: ${white};\n    --semiDark: ${white};\n    --codeBg: transparent;\n    --shadow: ${black};\n    --white: ${lightWhite};\n\n    &.dark {\n      --bg: ${primaryDark};\n      --text: ${white};\n      --primary: ${white};\n      --shadow: transparent;\n      --codeBg: ${secondaryDark};\n    }\n\n    background-color: var(--bg);\n\n    color: var(--text);\n\n    font-family: 'Ubuntu', sans-serif;\n    font-weight: 400;\n    transition: background-color 0.3s ease-in-out;\n    font-size: 1.2rem;\n\n    text-rendering: optimizeLegibility;\n    font-kerning: normal;\n\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    font-smooth: always;\n  }\n\n  h1, h2, h3, h4, h5 {\n    font-family: 'Ubuntu', sans-serif;\n    font-weight: 700;\n  }\n\n  h1 {\n    font-size: 2rem;\n  }\n\n  a {\n    font-weight: bold;\n    text-decoration: none;\n    color: var(--primary);\n  }\n\n  #niceToMeetYou{\n    color : ${orange};\n  }\n\n  #hanyuXu{\n    color : ${pink};\n  }\n\n  #university{\n    color : ${green};\n  }\n\n  #job{\n    color : ${blue};\n    font-weight : bold;\n  }\n\n  #aboutMe{\n    color : ${pink};\n  }\n\n  #projects{\n    color : ${green};\n  }\n\n  #experience{\n    color : ${yellow};\n  }\n\n  #things{\n    color : ${blue};\n  }\n  \n  #resume{\n    color : ${purple};\n  }\n\n\n`\n\nexport default GlobalStyle\n","import React, { useState } from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport { md } from 'styled-bootstrap-responsive-breakpoints'\nimport { MenuAltRight } from 'styled-icons/boxicons-regular/MenuAltRight'\n\nconst MobileNavMenu = styled(MenuAltRight)`\n  position: fixed;\n  top: 0;\n  right: 0;\n  color: ${props => (props.toggled ? 'var(--text)' : 'var(--primary)')};\n  z-index: 100;\n  @media screen and (min-width: ${md}px) {\n    visibility: hidden;\n  }\n`\n\nconst NavMenu = styled.div`\n  top: 0;\n  right: 0;\n  justify-content: center;\n  align-items: flex-end;\n  flex-direction: column;\n  display: flex;\n  height: 100vh;\n  width: 200px;\n  background: var(--navBg);\n  position: fixed;\n\n  @media screen and (max-width: ${md}px) {\n    position: fixed;\n    z-index: 90;\n    right: 0;\n    width: 200px;\n    border-left: 1px solid var(--primary);\n    transition: transform 0.3s ease-in-out;\n    transform: translateX(${props => (props.visible ? '0%' : '100%')});\n  }\n`\n\nconst NavLinksContainer = styled.nav`\n  text-align: center;\n  width: 200px;\n  a {\n    color: var(--primary);\n    padding: 10px 0px 10px 0px;\n\n    &:hover {\n      color: var(--white);\n    }\n  }\n\n  & .active {\n    &::before {\n      content: '{ ';\n      color: var(--white);\n    }\n    &::after {\n      content: ' }';\n      color: var(--white);\n    }\n  }\n`\n\nconst Navigation = () => {\n  const [navExpanded, toggleNavExpand] = useState(false)\n\n  const NavLinks = () => (\n    <NavLinksContainer>\n      <h2>\n        <Link to='/' activeClassName='active' id = \"aboutMe\">\n          aboutMe\n        </Link>\n      </h2>\n\n      <h2>\n        <Link to='/projects' activeClassName='active' id = \"projects\">\n          projects\n        </Link>\n      </h2>\n\n      <h2>\n        <Link to='/experience' activeClassName='active' id = \"experience\">\n          experience\n        </Link>\n      </h2>\n\n      <h2>\n        <Link to='/things' activeClassName='active' id = \"things\">\n          things\n        </Link>\n      </h2>\n\n      <h2>\n        <Link to='/resume' activeClassName='active' id = \"resume\">\n          resume\n        </Link>\n      </h2>\n\n    </NavLinksContainer>\n  )\n\n  return (\n    <React.Fragment>\n      <MobileNavMenu\n        id='nav-menu-button'\n        size={48}\n        toggled={!navExpanded}\n        onClick={() => toggleNavExpand(!navExpanded)}\n      />\n      <NavMenu id='nav' visible={navExpanded}>\n        {NavLinks()}\n      </NavMenu>\n    </React.Fragment>\n  )\n}\n\nexport default Navigation\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport styled from 'styled-components'\n\nimport { Github } from 'styled-icons/feather/Github'\nimport { Linkedin } from 'styled-icons/feather/Linkedin'\nimport { Weibo } from 'styled-icons/fa-brands/Weibo'\nimport { Instagram } from 'styled-icons/feather/Instagram'\nimport { Mail } from 'styled-icons/feather/Mail'\n\nconst ICON_SIZE = '32'\n\nconst Link = styled.a`\n  padding: 1em;\n`\nconst SocialMediaContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin: 0 auto;\n  align-content: center;\n  flex-wrap: wrap;\n  max-width: 400px;\n\n  a {\n    svg {\n      &:hover {\n        color: var(--text);\n      }\n    }\n  }\n`\n\nconst SocialMediaLinks = () => (\n  <StaticQuery\n    query={graphql`\n      {\n        site {\n          siteMetadata {\n            instagram\n            github\n            linkedin\n            weibo\n            email\n          }\n        }\n      }\n    `}\n    render={({\n      site: {\n        siteMetadata: { instagram, github, linkedin, weibo, email }\n      }\n    }) => {\n      return (\n        <SocialMediaContainer>\n          <Link href={instagram} alt='Instagram' aria-label='Link to Instagram'>\n            <Instagram color = \"#f29c9f\" size={ICON_SIZE} />\n          </Link>\n          <Link href={github} alt='Github' aria-label='Link to Github'>\n            <Github color = \"#83c192\" size={ICON_SIZE} />\n          </Link>\n          <Link href={linkedin} alt='LinkedIn' aria-label='Link to Linked In'>\n            <Linkedin color = \"#fada5d\" size={ICON_SIZE} />\n          </Link>\n          <Link href={weibo} alt='Weibo' aria-label='Link to Weibo'>\n            <Weibo color = \"#51c7da\" size={ICON_SIZE} />\n          </Link>\n          <Link\n            href={`mailto:${email}`}\n            alt='E-mail'\n            aria-label='Link to Send Email'\n          >\n            <Mail color = \"#af98e6\" size={ICON_SIZE} />\n          </Link>\n        </SocialMediaContainer>\n      )\n    }}\n  />\n)\n\nexport default SocialMediaLinks\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport GlobalStyle from '../theme/GlobalStyle'\nimport Navigation from './Navigation'\nimport { md } from 'styled-bootstrap-responsive-breakpoints'\n\nimport SocialMediaLinks from '../components/socialMediaLinks'\n\nconst ContentContainer = styled.div`\n  padding: 2vw;\n  margin-right: 250px;\n\n  @media screen and (max-width: ${md}px) {\n    margin-right: 0;\n  }\n`\n\nconst ThemeToggle = styled.span`\n  cursor: pointer;\n  position: absolute;\n  top: 10;\n  left: 10;\n  z-index: 99;\n`\nconst Foot = styled.div`\n  padding-top: 20vh;\n  font-size: 0.75em;\n  text-align: center;\n`\n\nconst Layout = ({ children }) => {\n\n  return (\n    <React.Fragment>\n      <GlobalStyle />\n      <ThemeToggle></ThemeToggle>\n      <Navigation />\n      <ContentContainer>\n        {children}\n        <Foot>\n          <SocialMediaLinks />\n          <p>&copy; Copyright 2019, Hanyu Xu</p>\n        </Foot>\n      </ContentContainer>\n    </React.Fragment>\n  )\n}\n\nexport default Layout\n","import styled from 'styled-components'\n\nconst SuperText = styled.h1`\n  @media screen and (max-width: 350px) {\n    font-size: 2.5rem;\n  }\n\n  @media screen and (min-width: 350px) {\n    font-size: 3.5rem;\n  }\n\n  @media screen and (min-width: 700px) {\n    font-size: 5rem;\n  }\n\n  padding: 2vh 0 10vh 0;\n  margin: 0;\n  &::before {\n    content: '<';\n    color: var(--text);\n  }\n  &::after {\n    content: ' />';\n    color: var(--text);\n  }\n`\n\nexport default SuperText\n"],"sourceRoot":""}